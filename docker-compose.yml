version: '3.8'

services:
  client:
    container_name: client
    build:
      context: .
      dockerfile: ./apps/client/Dockerfile
    #   target: development
    # volumes:
    #   - ./apps/client:/app/apps/client
    #   - /app/node_modules
    # command: yarn workspace client run dev
    environment:
      - PORT=8080
    ports:
      - '8080:8080'

  server:
    container_name: server
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    #   target: development
    # volumes:
    #   - ./apps/server:/app
    #   - /app/node_modules
    # command: yarn run start:dev
    environment:
      - PORT=3000
    ports:
      - '3000:3000'

  reverse_proxy:
    container_name: reverse_proxy
    image: nginx:alpine
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    ports:
      - '80:80'
      - '443:443'
    depends_on:
      - client
      - server
      - ssl_certbot

  ssl_certbot:
    container_name: ssl_certbot
    image: certbot/certbot
    volumes:
      - certbot-etc:/etc/letsencrypt
      - certbot-var:/var/www/certbot
    command: certonly --webroot --webroot-path=/var/www/certbot --email <your_email> --non-interactive --agree-tos --no-eff-email --force-renew -d <your_domain>

volumes:
  certbot-etc:
  certbot-var:
